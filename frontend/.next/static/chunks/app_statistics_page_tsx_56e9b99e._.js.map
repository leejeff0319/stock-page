{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Jeff/Developer/stock-page/frontend/app/statistics/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState } from 'react';\r\n\r\nexport default function AutoMLPipeline() {\r\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\r\n  const [selectedColumn, setSelectedColumn] = useState<string>('');\r\n  const [columns, setColumns] = useState<string[]>([]);\r\n  const [isTraining, setIsTraining] = useState(false);\r\n  const [dataProfilingResults, setDataProfilingResults] = useState<string | null>(null);\r\n  const [bestModel, setBestModel] = useState<string | null>(null);\r\n\r\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.files && event.target.files.length > 0) {\r\n      const file = event.target.files[0];\r\n      setSelectedFile(file);\r\n      \r\n      // TODO: Parse file to extract columns (this is a placeholder)\r\n      // In a real app, you would parse the CSV/Excel file here\r\n      const mockColumns = ['Column1', 'Column2', 'Column3', 'Target'];\r\n      setColumns(mockColumns);\r\n    }\r\n  };\r\n\r\n  const handleUpload = () => {\r\n    // TODO: Implement actual file upload logic\r\n    console.log('File uploaded:', selectedFile?.name);\r\n  };\r\n\r\n  const handleTrainModel = () => {\r\n    setIsTraining(true);\r\n    // TODO: Implement actual model training logic\r\n    setTimeout(() => {\r\n      setDataProfilingResults('Data profiling completed. 10 features analyzed. No missing values detected.');\r\n      setBestModel('Random Forest Classifier (Accuracy: 92.5%)');\r\n      setIsTraining(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const handleDownloadModel = () => {\r\n    // TODO: Implement model download logic\r\n    console.log('Downloading model...');\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-6 max-w-4xl\">\r\n      <h1 className=\"text-2xl font-bold mb-6\">Automated Machine Learning Pipeline</h1>\r\n      \r\n      <div className=\"mb-6\">\r\n        <label className=\"block text-sm font-medium mb-2\" htmlFor=\"dataset-upload\">\r\n          Choose a dataset to upload\r\n        </label>\r\n        <input\r\n          id=\"dataset-upload\"\r\n          type=\"file\"\r\n          accept=\".csv,.xlsx,.xls\"\r\n          onChange={handleFileChange}\r\n          className=\"block w-full text-sm text-gray-500\r\n            file:mr-4 file:py-2 file:px-4\r\n            file:rounded-md file:border-0\r\n            file:text-sm file:font-semibold\r\n            file:bg-blue-50 file:text-blue-700\r\n            hover:file:bg-blue-100\"\r\n        />\r\n        {selectedFile && (\r\n          <p className=\"mt-2 text-sm text-gray-600\">Selected file: {selectedFile.name}</p>\r\n        )}\r\n      </div>\r\n      \r\n      <button\r\n        onClick={handleUpload}\r\n        disabled={!selectedFile}\r\n        className=\"bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded mb-6 disabled:bg-gray-400 disabled:cursor-not-allowed\"\r\n      >\r\n        Upload\r\n      </button>\r\n      \r\n      <div className=\"mb-6\">\r\n        <h2 className=\"text-lg font-medium mb-2\">Choose a column to predict</h2>\r\n        <select\r\n          value={selectedColumn}\r\n          onChange={(e) => setSelectedColumn(e.target.value)}\r\n          disabled={columns.length === 0}\r\n          className=\"block w-full p-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 disabled:bg-gray-100\"\r\n        >\r\n          <option value=\"\">{columns.length ? \"Select a column\" : \"Upload a file first\"}</option>\r\n          {columns.map((col) => (\r\n            <option key={col} value={col}>{col}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      \r\n      <button\r\n        onClick={handleTrainModel}\r\n        disabled={!selectedColumn}\r\n        className=\"bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded mb-6 disabled:bg-gray-400 disabled:cursor-not-allowed\"\r\n      >\r\n        {isTraining ? 'Training...' : 'Train Model'}\r\n      </button>\r\n      \r\n      <div className=\"mb-6\">\r\n        <h2 className=\"text-lg font-medium mb-2\">Data Profiling</h2>\r\n        <div className=\"p-4 border border-gray-200 rounded-md min-h-20 bg-gray-50\">\r\n          {dataProfilingResults ? (\r\n            <pre className=\"text-sm\">{dataProfilingResults}</pre>\r\n          ) : (\r\n            <p className=\"text-gray-500 italic\">Results will appear here after training</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"mb-6\">\r\n        <h2 className=\"text-lg font-medium mb-2\">Best Model</h2>\r\n        <div className=\"p-4 border border-gray-200 rounded-md min-h-20 bg-gray-50\">\r\n          {bestModel ? (\r\n            <p className=\"text-sm\">{bestModel}</p>\r\n          ) : (\r\n            <p className=\"text-gray-500 italic\">The best model will appear here after training</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n      \r\n      <button\r\n        onClick={handleDownloadModel}\r\n        disabled={!bestModel}\r\n        className=\"bg-purple-500 hover:bg-purple-600 text-white font-bold py-2 px-4 rounded disabled:bg-gray-400 disabled:cursor-not-allowed\"\r\n      >\r\n        Download Model\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}